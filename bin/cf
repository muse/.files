#!/bin/bash
# Maintainer: Mirko van der Waal
# Packages: xclip gnu-getopt
# Contact: <mvdw at airmail dot cc>
#
# An very easy 1339.cf uploader for the command line. It was originally
# created for pomf which has been taken down by the owner.
# (Goodnight sweet prince)

VERSION=0.2
NAME=cf

# Find out that some things aren't working? Follow these stepts to ensure
# I am not at fault.
# 1. Have a internet connection, I know it may sound silly but some people
#    just don't have it or forget that they aren't currently connected.
# 2. Export the $BROWSER variable when using the -w flag. This relies on you
#    exporting that variable to know what browser to force the file in.
# 3. The specified file or paste is not bigger than 100MB or rarely 50MB.
# 4. Make sure the $LOG and $IMG variable paths are existant.
#    If this is not the case moving the file could cause problems to the script.
# 5. Don't forget to install the required packages, the names may vary
#    for the different operating systems.

SHORT="fsu:lbovh"
LONG="upload:,logfile,fullscreen,selection,offline,browser,help,version"
FLAGS=$(getopt -o $(echo $SHORT) \
               -l $(echo $LONG) \
               -n "$0"  \
               -- "$@")

# Whenever something goes wrong where we miss or found wrong flags.
if [ $? != 0 ]; then exit 1 ; fi
eval set -- "$FLAGS"

URL="1339.cf"
IMG=$HOME/Pictures/1339s
LOG=$HOME/Pictures/1339s/url.list

while true; do
    case "$1" in
        -f|--fullscreen)
            FULLSCREEN=true
            shift   ;;

        -s|--selection)
            SELECTION=true
            shift   ;;

        -u|--upload)
            UPLOAD_ARGUMENT=$2
            UPLOAD=true
            shift 2 ;;

        -l|--logfile)
            LOGFILE=true
            shift   ;;

        -o|--offline)
            OFFLINE=true
            shift   ;;

        -b|--browser)
            WWW=true
            shift   ;;

        -v|--version)
            echo $NAME - $VERSION;
            exit 0  ;;

        -h|--help)
            echo "
$(tput bold)NAME$(tput sgr0)
    cf - an 1339.cf uploading tool.

$(tput bold)FLAGS$(tput sgr0)
    $(tput bold)-u, --upload$(tput sgr0)
        Upload the <argument> file. This throws away the \`-s\` & \`-f\` flags.
        You can however save the file locally and write it to the logfile.

    $(tput bold)-f, --fullscreen$(tput sgr0)
        Create a fullscreen screenshot, this takes a screenshot of all the-
        available and active monitors. If you want to take a screenshot of only-
        the current window; you can use \`-s\` to select the entire screen.

    $(tput bold)-s, --selection$(tput sgr0)
        Take a selection based screenshot. Select an area with the mouse after-
        the script is ran. Release to automatically upload the data.

    $(tput bold)-b, --browser$(tput sgr0)
        This will open the just created screenshot or already existant file-
        in the browser that is exported as \$BROWSER.

    $(tput bold)-l, --logfile$(tput sgr0)
        Write the succesfully uploaded url to the \$LOG variable path.

    $(tput bold)-o, --offline$(tput sgr0)
        Create an local copy of the uploaded file.

    $(tput bold)-h, --help$(tput sgr0)
        Display this.

    $(tput bold)-v, --version$(tput sgr0)
        Show the current version.

$(tput bold)ISSUES$(tput sgr0)
    The following points are also addressed in the source of the code.

    *  Have a internet connection, I know it may sound silly but some people
       just don't have it or forget that they aren't currently connected.

    *  Export the \$BROWSER variable when using the -w flag. This relies on you
       exporting that variable to know what browser to force the file in.

    *  The specified file or paste is not bigger than 100MB or rarely 50MB.

    *  Make sure the \$LOG and \$IMG variable paths are existant.
       If this is not the case moving the file could cause problems to the script.

    *  Don't forget to install the required packages, the names may vary
       for the different operating systems.

$(tput bold)EXAMPLES$(tput sgr0)
    % cf -bslo
        A complete package allowing selection and saving the files to both-
        the logs and locally.
    % cf -sl
        A selective screenshot which is saved to the logfile.
    % cf -f
        Merely a fullscreen screenshot
        ";
        exit 0  ;;

        -- ) shift; break ;;
        *  )        break ;;
    esac
done

# Get the current file.
if   [[ $FULLSCREEN ]]; then
    FILE=$(NAME=$(echo -n $$.png); scrot /tmp/$NAME; echo -n /tmp/$NAME)
elif [[ $SELECTION ]]; then
    FILE=$(NAME=$(echo -n $$.png); scrot -s /tmp/$NAME; echo -n /tmp/$NAME)
elif [[ $UPLOAD ]]; then
    FILE=$UPLOAD_ARGUMENT
else
    echo "You either forgot a to specify one of the required flags"
    exit 1
fi

OUTPUT=$(curl --silent -sf -F files[]="@$FILE" $URL/upload.php)
if [[ ${OUTPUT} =~ '"success":true' ]]; then :
    IMAGE=$(echo "$OUTPUT" | grep -Eo '"url":"[A-Za-z0-9]+.*",' | \
                             sed 's/"url":"//;s/",//')
    [[ $OFFLINE ]] && \
        mv $FILE $IMG/$IMAGE
    [[ $LOGFILE ]] && \
        echo http://a.$URL/$IMAGE >> $LOG
    [[ $WWW ]] && \
        $WWW http://a.$URL/$IMAGE

    naughtify --preset normal --title "Succesfully uploaded" http://a.$URL/$IMAGE

    echo -n http://a.$URL/$IMAGE | xclip -selection primary     &>/dev/null
    echo -n http://a.$URL/$IMAGE | xclip -selection clipboard   &>/dev/null
    echo "Succesfully uploaded: http://a.$URL/$IMAGE"
else
    echo "You failed to upload the file ($FILE)"
    exit
fi
